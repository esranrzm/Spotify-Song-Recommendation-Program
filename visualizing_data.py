# -*- coding: utf-8 -*-
"""visualizing_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZyowzJyBz0dGYjvXIhU1o-efN-wrbfe0

---
#Exploratory Data Analysis

## Visualizations Descriptive Statistics
### Dataset for general data
* The data sets that we have for this project have five different subdatas. Each subdatas has similar columns (i.e. similar features that reflect the features of songs, genres, etc.). 
* The biggest data that we have is called 'first_data'. In that dataset we have several columns as shown below; 
       ['acousticness', 'artists', 'danceability', 'duration_ms', 'energy',
       'explicit', 'id', 'instrumentalness', 'key', 'liveness', 'loudness',
       'mode', 'name', 'popularity', 'release_date', 'speechiness', 'tempo',
       'valence', 'year']
* Each column has different property for each song and has different values for each song.

* At this step, to increase the understandability of this data, we try to visualize each column's histogram.

* As you can see below, for each column, the values of that property grouped as intervals and counted how many songs have such property and located in the corresponding interval.
"""

first_data.hist(figsize=(20, 20),color='c', edgecolor='black')
plt.show()

"""
* Now we can make further analyses and make these analyses visual.
* We saw the distribution of each feature among all songs. Now we will examine changes in these features throughout the years (i.e. from 1920 to 2020)
* We will only look at a few important features that will help us for further examinations.



---

"""

# acousticness - year
plt.figure(figsize=(10, 4))
sns.set(style="whitegrid")
columns = ["acousticness"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_ylabel('Count')
ax.set_xlabel('Year')

# loudness - year
plt.figure(figsize=(10, 4))
sns.set(style="whitegrid")
columns = ["loudness"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_ylabel('Count')
ax.set_xlabel('Year')

# dancebility - year
plt.figure(figsize=(10, 4))
sns.set(style="whitegrid")
columns = ["danceability"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_ylabel('Count')
ax.set_xlabel('Year')

# energy - year
plt.figure(figsize=(10, 4))
sns.set(style="whitegrid")
columns = ["energy"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_ylabel('Count')
ax.set_xlabel('Year')

# instrumentalness - year
plt.figure(figsize=(10, 4))
sns.set(style="whitegrid")
columns = ["instrumentalness"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_ylabel('Count')
ax.set_xlabel('Year')

# popularity - year
plt.figure(figsize=(10, 4))
sns.set(style="whitegrid")
columns = ["popularity"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_ylabel('Count')
ax.set_xlabel('Year')

"""* As you can see from the visual data, over the years the acousticness of the songs decreased. In contrast, the loudness and energy of the songs remarkably increased from 1920 until today. Similarly, the dancebility of the songs is increased as well.
* The few years after the 2000s, popularity shows its highest value.
* Throughout the years the level of instrumentalness has been fluctuated and had some changes but it almost at the same level as it is in 1920.
* It is too soon to assume the correlations by just looking at this visual graphs but there might be a positive correlation between loudness and energy of the songs. We will see this kind of correlation in further analysis.

### Another way to show changes of the features over the years
  * Another way to show these changes is to use *'barplot'*. In this way, we are able to show each year's data and the values of the corresponding years.
  * Since it is colorful, it might be very attractive for the viewers.
  * It has a disadvantage though. To be able to show the data properly, we should use big sizes and this will cover a lot of space on the page.
"""

#acousticness
plt.figure(figsize=(22, 5))
sns.barplot(x=first_data.year,y=first_data[first_data.columns[0]])  
plt.xticks(rotation=80);
plt.show()

#instrumentalness
plt.figure(figsize=(22, 5))
sns.barplot(x=first_data.year,y=first_data[first_data.columns[7]])  
plt.xticks(rotation=80);
plt.show()

#speechiness
plt.figure(figsize=(22, 5))
sns.barplot(x=first_data.year,y=first_data[first_data.columns[15]])  
plt.xticks(rotation=80);
plt.show()

"""### Dataset for genres
* Another important data that we have is *'data_for_genres'*. This data have columns named as;
        
        ['genres', 'acousticness', 'danceability', 'duration_ms', 'energy',
       'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo',
       'valence', 'popularity', 'key', 'mode']
* This time we have such features that belongs to each genres. 
* As you can see below, each feature's distribution is represented by using the 'displot' method. It shows us the distribution of the values of each feature among genres.
"""

visual_data = data_for_genres.drop(columns=  ['genres','key', 'mode','popularity'])

for i in range(1,10):
  plt.figure(figsize=(12, 3))
  sns.distplot(visual_data[visual_data.columns[i]])

"""* Using scatterplots might help us to see the relations between the features of genres.

* Below, you will see the code to obtain visualization of features and their comparison.
"""

#combining two data feature with scatterplot

plt.figure(figsize=(16, 8))
ax = sns.jointplot(x=data_for_genres['speechiness'],y=data_for_genres["instrumentalness"],data=data_for_genres)
;

plt.figure(figsize=(16, 8))
ax = sns.jointplot(x=data_for_genres['energy'],y=data_for_genres["acousticness"],data=data_for_genres)
;

plt.figure(figsize=(16, 8))
ax = sns.jointplot(x=data_for_genres['liveness'],y=data_for_genres["danceability"],data=data_for_genres)
;

plt.figure(figsize=(16, 8))
ax = sns.jointplot(x=data_for_genres['acousticness'],y=data_for_genres["danceability"],data=data_for_genres)
;

"""#Visualizations of Aggregated Forms Based on Features

* So far, we examined how the features of songs and features of the genres changed over the years. Now by using proper methods we can compare these changes.
* Below you will see the comparisons of two different features of songs.
"""

#change in the danceability and energy over the years

plt.figure(figsize=(12, 4))
sns.set(style="whitegrid")
columns = ["danceability","energy"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_title('dancebility vs energy')
ax.set_ylabel('Count')
ax.set_xlabel('Year')


#change in the acousticness and energy over the years
plt.figure(figsize=(12, 4))
sns.set(style="whitegrid")
columns = ["acousticness","energy"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_title('acousticness vs energy')
ax.set_ylabel('Count')
ax.set_xlabel('Year')


#change in the instrumentalness and energy over the years
plt.figure(figsize=(12, 4))
sns.set(style="whitegrid")
columns = ["instrumentalness","energy"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_title('instrumentalness vs energy')
ax.set_ylabel('Count')
ax.set_xlabel('Year')


#change in the loudness and energy over the years
plt.figure(figsize=(12, 4))
sns.set(style="whitegrid")
columns = ["instrumentalness","acousticness"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_title('instrumentalness vs acousticness')
ax.set_ylabel('Count')
ax.set_xlabel('Year')

#change in the speechiness and liveness over the years
plt.figure(figsize=(12, 4))
sns.set(style="whitegrid")
columns = ["speechiness","liveness"]
for col in columns:
    x = first_data.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_title('speechiness vs liveness')
ax.set_ylabel('Count')
ax.set_xlabel('Year')
;

"""### Making some comments on comparisons

  * When we look at the first graph, both features have increased after the year they started. However, energy increased much more than dancebility.


  *  If we look for the second graph, the features have an opposite progression from each other. While the acoustics decreased from the year it started, the energy has been increasing since the year it started.

  * When we look at the third graph, the features that had very close values between the years 1930-1960 diverged from each other after 1960. The energy has increased continuously and has reached a much higher point than when it started. Instrumentalness first decreased, then increased again to a point close to its original value.

  * When we look at fourth graph, acoustics had a fluctuated graphic until 1960. After 1960, the value of acoustics started to decline and comes to the same value with the instrumentalness that we compare with acoustics. Instrumentalness reaches almost the same value it started after its fluctuated graphic until today.

  * When we look at fifth graph, while speechless has a fluctuated graphic between 1920-1960, it has not changed much after 1960 and has a value slightly higher than the value it started with when it came to the present day. Liveness, on the other hand, has a graphic that does not have large fluctuations, unlike speechless. However, when the starting value is compared with the current value, there is a decrease. When the values of both features are compared, liveness has a higher value than speechless.


---

## Comparing Multiple Datas
* As we did in the previous code cells, we will compare multiple features of the songs by using only one box.

* This will help us to understand the differences among features better.

* As you see below, over the years, the song became more energetic and less acoustic. On the other hand, there is not a huge change in the level of valance, liveness, and danceability of the songs over the years.

* The fluctuation in the speechiness became more stable towards 2020.
"""

#audio characteristics over years

plt.figure(figsize=(16, 10))
sns.set(style="whitegrid")
columns = ["acousticness","danceability","energy","speechiness","liveness"]
for col in columns:
    x = data_for_years.groupby("year")[col].mean()
    ax= sns.lineplot(x=x.index,y=x,label=col)
ax.set_title('Change in Audio characteristics over years')
ax.set_ylabel('Measure')
ax.set_xlabel('Year')
;

"""---



---



---

## Analysing distribution of attributes for songs dataset

* So far we examined the distribution of song's features over the years and the distributions of genre's features over the years.

* This time we will visualize our data with respect to the artists. We will examine how the features of an artists' songs changed over the years.

* Our data that is shown below has similar columns with other data that we examined before.

        ['artists', 'acousticness', 'danceability', 'duration_ms', 'energy',
         'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo',
         'valence', 'popularity', 'key', 'mode', 'count']
"""

data_for_artist.hist(figsize=(20, 20),color='g', edgecolor='black')
plt.show()